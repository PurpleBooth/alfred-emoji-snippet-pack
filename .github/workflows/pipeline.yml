name: Pipeline
on:
  push:
    branches:
      - '*'
  pull_request:
jobs:
  versio-plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - uses: chaaz/versio-actions/install@v1.1
        name: Install versio
      - name: Check projects
        run: versio check
      - name: Print changes
        run: versio plan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: ${{ github.actor }}
      - name: version bump details
        run: versio release --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: ${{ github.actor }}

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: nick-invision/retry@v2.4.1
        with:
          timeout_minutes: 10
          max_attempts: 5
          command: sudo apt-get update && sudo apt-get install -y bats
      - uses: actions/checkout@v2.3.4
        with:
          lfs: true
      - uses: ruby/setup-ruby@v1
      - uses: PurpleBooth/gfmfmt-action@v1.0.5
        name: Check markdown is well formatted
      - run: |
          bundle config set path 'vendor/bundle'
          bundle install
          make clean build test
      - uses: actions/upload-artifact@v2
        with:
          name: alfredsnippet-pack
          path: ./build/Emoji.alfredsnippets
  release:
    if: github.ref == 'refs/heads/main'
    needs:
      - versio-plan
      - test
    outputs:
      version_bump: ${{ steps.version_bump.outputs.version_bump }}
      current_version: ${{ steps.current_version.outputs.current_version }}
      previous_version: ${{ steps.previous_version.outputs.previous_version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      - uses: chaaz/versio-actions/install@v1.1
        name: Install versio
      - id: previous_version
        run: echo ::set-output "name=previous_version::$( versio get --id 1 -v )"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: ${{ github.actor }}
      - run: echo ::set-output "name=BUMP::$( versio release --dry-run )"
        id: get_versio_plan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: ${{ github.actor }}

      - name: Generate release
        if: ${{ contains(steps.get_versio_plan.outputs.BUMP, ' -> ') }}
        run: |
          versio release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: ${{ github.actor }}
          RUST_LOG: versio=trace
          RUST_BACKTRACE: 1
      - run: echo ::set-output "name=current_version::$( versio get --id 1 -v )"
        id: current_version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: ${{ github.actor }}
      - run: echo ::set-output "name=version_bump::true"
        if: steps.current_version.outputs.current_version != steps.previous_version.outputs.previous_version
        id: version_bump

  upload-release:
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        name: Checkout the repository
        with:
          lfs: true
          fetch-depth: 0
      - uses: chaaz/versio-actions/install@v1.1
        name: Install versio
      - uses: actions-rs/toolchain@v1.0.7
        name: Install rust toolchain
        with:
          default: true
          profile: minimal
          toolchain: stable
      - name: "Build Changelog"
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v2.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/download-artifact@v2
        name: Download package to be released
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: create_release
        uses: ncipollo/release-action@v1.8.8
        with:
          allowUpdates: true
          token: ${{ secrets.COMMITTER_TOKEN }}
          body: ${{steps.build_changelog.outputs.changelog}}
          name: Release v${{ needs.release.outputs.current_version }}
          tag: v${{ needs.release.outputs.current_version }}
          artifacts: ./alfredsnippet-pack/Emoji.alfredsnippets